---
# Ansible managed

# Expect iocage to pass with expected message(s).
# Status:
# pass ..... module pass with expected message(s)
# fail ..... module pass without expected message(s)
# crash .... module crash

- ansible.builtin.set_fact:
    _crash: true

- block:
    - name: " >>> TEST START: base_exists: Check if {{ basejail }} exists"
      iocage:
        {
          "name": "{{ basejail }}",
          "state": "facts"
        }
      register: result
    - ansible.builtin.set_fact:
        _crash: false
    - ansible.builtin.debug:
        var: result
      when: debug2|bool
    - ansible.builtin.debug:
        var: result.msg
      when: debug|bool
    - ansible.builtin.debug:
        var: iocage_templates.keys()|list
      when: debug|bool
  rescue:
    - ansible.builtin.debug:
        var: ansible_failed_result
      when: debug|bool
    - ansible.builtin.import_tasks: custom_stats_crash.yml

- block:
    - ansible.builtin.assert:
        fail_msg: "[ERR] {{ _test_name }}: Failed: {{ result.msg }}"
        success_msg: "[OK]  {{ _test_name }}: Passed: {{ result.msg }}"
        that:
          - basejail in iocage_templates.keys()|list
    - ansible.builtin.import_tasks: custom_stats_pass.yml
  rescue:
    - ansible.builtin.debug:
        msg: "[ERR] {{ _test_name }} failed. {{ basejail }} does not exist."
      when: debug|bool
    - ansible.builtin.import_tasks: custom_stats_fail.yml
  when: not _crash
